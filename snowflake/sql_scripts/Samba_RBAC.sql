-----------------------------------------------------------------------------------------------------------------------
-- Step 1: Create the Base Roles
-- Create the three primary roles
USE ROLE SECURITYADMIN;

-- Admin role with full privileges
CREATE OR REPLACE ROLE SAMBA_ADMIN;
GRANT ROLE SAMBA_ADMIN TO ROLE SYSADMIN;

-- Data engineer role for ELT operations
CREATE OR REPLACE ROLE SAMBA_DATA_ENGINEER;
GRANT ROLE SAMBA_DATA_ENGINEER TO ROLE SAMBA_ADMIN;

-- Data analyst role for read/query access
CREATE OR REPLACE ROLE SAMBA_DATA_ANALYST;
GRANT ROLE SAMBA_DATA_ANALYST TO ROLE SAMBA_ADMIN;
----------------------------------------------------------------------------------------------------------------------------
-- Step 2: Grant Warehouse Privileges
-- Grant warehouse usage to appropriate roles
USE ROLE SECURITYADMIN;

-- Admin gets full control
GRANT ALL PRIVILEGES ON WAREHOUSE SAMBA_WH TO ROLE SAMBA_ADMIN;

-- Engineers can use and modify the warehouse
GRANT USAGE, OPERATE, MODIFY ON WAREHOUSE SAMBA_WH TO ROLE SAMBA_DATA_ENGINEER;

-- Analysts can only use the warehouse
GRANT USAGE ON WAREHOUSE SAMBA_WH TO ROLE SAMBA_DATA_ANALYST;
---------------------------------------------------------------------------------------------------------------------------
-- Step 3: Database and Schema Privileges
USE ROLE SECURITYADMIN;

-- Database-level privileges
GRANT USAGE ON DATABASE SAMBA_DB TO ROLE SAMBA_ADMIN;
GRANT USAGE ON DATABASE SAMBA_DB TO ROLE SAMBA_DATA_ENGINEER;
GRANT USAGE ON DATABASE SAMBA_DB TO ROLE SAMBA_DATA_ANALYST;

-- RAW_STAGE schema (engineers only)
GRANT USAGE, CREATE TABLE, CREATE STAGE ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT ON FUTURE TABLES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- TRANSFORMED schema (engineers only)
GRANT USAGE, CREATE TABLE ON SCHEMA SAMBA_DB.TRANSFORMED TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT, INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA SAMBA_DB.TRANSFORMED TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT ON FUTURE TABLES IN SCHEMA SAMBA_DB.TRANSFORMED TO ROLE SAMBA_DATA_ENGINEER;

-- PRODUCTION schema
-- Engineers get write access
GRANT USAGE, CREATE TABLE ON SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_DATA_ENGINEER;

-- Analysts get read-only access
GRANT USAGE ON SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_DATA_ANALYST;
GRANT SELECT ON ALL TABLES IN SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_DATA_ANALYST;
GRANT SELECT ON FUTURE TABLES IN SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_DATA_ANALYST;
----------------------------------------------------------------------------------------------------------------------------
-- Step 4: Grant Object Privileges
-- Grant additional privileges as needed
USE ROLE SECURITYADMIN;

-- Allow engineers to create and manage stages
GRANT CREATE STAGE ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT USAGE ON ALL STAGES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- Allow engineers to create file formats
GRANT CREATE FILE FORMAT ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
----------------------------------------------------------------------------------------------------------------------------
-- Step 5: User Assignment
-- Create sample users and assign roles
USE ROLE USERADMIN;

-- Admin user
CREATE USER IF NOT EXISTS samba_admin
  PASSWORD = 'secure_password_123'
  DEFAULT_ROLE = SAMBA_ADMIN
  DEFAULT_WAREHOUSE = SAMBA_WH;

GRANT ROLE SAMBA_ADMIN TO USER samba_admin;

-- Data engineer user
CREATE USER IF NOT EXISTS samba_engineer
  PASSWORD = 'secure_password_456'
  DEFAULT_ROLE = SAMBA_DATA_ENGINEER
  DEFAULT_WAREHOUSE = SAMBA_WH;

USE ROLE SECURITYADMIN;
GRANT ROLE SAMBA_DATA_ENGINEER TO USER samba_engineer;

-- Data analyst user
CREATE USER IF NOT EXISTS samba_analyst
  PASSWORD = 'secure_password_789'
  DEFAULT_ROLE = SAMBA_DATA_ANALYST
  DEFAULT_WAREHOUSE = SAMBA_WH;

  USE ROLE SECURITYADMIN;
GRANT ROLE SAMBA_DATA_ANALYST TO USER samba_analyst;
--------------------------------------------------------------------------------------------------------------------
-- Step 6: Verification
-- Verify privileges for each role
USE ROLE ACCOUNTADMIN;

-- Check SAMBA_ADMIN privileges
SHOW GRANTS TO ROLE SAMBA_ADMIN;

-- Check SAMBA_DATA_ENGINEER privileges
SHOW GRANTS TO ROLE SAMBA_DATA_ENGINEER;

-- Check SAMBA_DATA_ANALYST privileges
SHOW GRANTS TO ROLE SAMBA_DATA_ANALYST;
--------------------------------------------------------------------------------------------------------------------
-- Step 7: Optional - Create Role Hierarchy
-- Role hierarchy
USE ROLE SECURITYADMIN;

-- Create department-level roles
CREATE ROLE IF NOT EXISTS SAMBA_BI_TEAM;
CREATE ROLE IF NOT EXISTS SAMBA_DEVELOPMENT;

-- Grant access to appropriate roles
GRANT ROLE SAMBA_DATA_ANALYST TO ROLE SAMBA_BI_TEAM;
GRANT ROLE SAMBA_DATA_ENGINEER TO ROLE SAMBA_DEVELOPMENT;
--------------------------------------------------------------------------------------------------------------------
-- Patch grants to empower SAMBA_DATA_ENGINEER
-- Let engineers use the S3 integration (needed to CREATE STAGE ... STORAGE_INTEGRATION)
-- Run as ACCOUNTADMIN (integration-level privilege):
GRANT USAGE ON INTEGRATION s3_int_samba TO ROLE SAMBA_DATA_ENGINEER;

-- Object creation in RAW_STAGE:
USE ROLE SECURITYADMIN;
GRANT CREATE PIPE   ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT CREATE STREAM ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT CREATE TASK   ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- Optional: monitoring & operate privileges post-creation
-- (skip if engineer will be the object owner)
-- After the objects exist:
--GRANT MONITOR ON PIPE  SAMBA_DB.RAW_STAGE.RAW_PIPE TO ROLE SAMBA_DATA_ENGINEER;
GRANT MONITOR ON PIPE SAMBA_DB.RAW_STAGE.branches_pipe TO ROLE SAMBA_DATA_ENGINEER;
--GRANT OPERATE ON TASK  SAMBA_DB.RAW_STAGE.CITIES_INSERT TO ROLE SAMBA_DATA_ENGINEER;
GRANT OPERATE ON PIPE SAMBA_DB.RAW_STAGE.branches_pipe TO ROLE SAMBA_DATA_ENGINEER;
GRANT OPERATE ON TASK  SAMBA_DB.RAW_STAGE.CITIES_INSERT_HAS_DATA TO ROLE SAMBA_DATA;

-- additional priviledges to creates sequences
GRANT CREATE SEQUENCE ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
-------------------------------------------------------------------------------------------------------------------------
-- GRANTS AND PRIVILEDGES TO SAMBA_DATA_ENGINEER
--USE ROLE SECURITYADMIN;

-- Ensure basic visibility
GRANT USAGE ON DATABASE SAMBA_DB TO ROLE SAMBA_DATA_ENGINEER;
GRANT USAGE ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- Allow creating all common object types in RAW_STAGE
GRANT CREATE TABLE, CREATE VIEW, CREATE STAGE, CREATE FILE FORMAT,
      CREATE SEQUENCE, CREATE PIPE, CREATE STREAM, CREATE TASK
ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- TABLES: full read/write on existing and future
GRANT SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES
ON ALL TABLES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT, INSERT, UPDATE, DELETE, TRUNCATE, REFERENCES
ON FUTURE TABLES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- VIEWS
GRANT SELECT ON ALL VIEWS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT ON FUTURE VIEWS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- SEQUENCES (use NEXTVAL, etc.)
GRANT USAGE ON ALL SEQUENCES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT USAGE ON FUTURE SEQUENCES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- STAGES & FILE FORMATS
GRANT USAGE ON ALL STAGES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT USAGE ON FUTURE STAGES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

GRANT USAGE ON ALL FILE FORMATS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT USAGE ON FUTURE FILE FORMATS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;


--USE ROLE SECURITYADMIN;

GRANT USAGE ON DATABASE SAMBA_DB TO ROLE SAMBA_DATA_ENGINEER;
GRANT USAGE ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT CREATE FILE FORMAT ON SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- Transfer ownership (run as current owner or a higher admin, e.g. SECURITYADMIN):
SHOW FILE FORMATS IN SCHEMA SAMBA_DB.RAW_STAGE;

GRANT OWNERSHIP ON FILE FORMAT SAMBA_DB.RAW_STAGE.SAMBA_CSV_FORMAT
TO ROLE SAMBA_DATA_ENGINEER
REVOKE CURRENT GRANTS;


-- PIPES (monitor/control)
-- Below bug Bulk grant on objects of type PIPE to ROLE is restricted. To be fixed
-- GRANT MONITOR, OPERATE ON ALL PIPES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT MONITOR, OPERATE ON FUTURE PIPES IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- STREAMS

GRANT SELECT ON ALL STREAMS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT SELECT ON FUTURE STREAMS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;

-- TASKS
GRANT MONITOR, OPERATE ON ALL TASKS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
GRANT MONITOR, OPERATE ON FUTURE TASKS IN SCHEMA SAMBA_DB.RAW_STAGE TO ROLE SAMBA_DATA_ENGINEER;
_______________________________________________________________________________________________________
USE ROLE SECURITYADMIN;
GRANT USAGE ON DATABASE SAMBA_DB TO ROLE SAMBA_BI_TEAM;
GRANT USAGE ON SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_BI_TEAM;
GRANT SELECT ON ALL TABLES IN SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_BI_TEAM;
GRANT SELECT ON ALL VIEWS  IN SCHEMA SAMBA_DB.PRODUCTION TO ROLE SAMBA_BI_TEAM;